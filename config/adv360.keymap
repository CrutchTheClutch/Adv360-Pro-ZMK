#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

// Helpers for readability
#define ______ &trans
#define xxxxxx &none

// Define Layout Names
#define QWERTY 0
#define DVORAK 1
#define KEYPAD 2
#define FN 3
#define MOD 4

// Define Key Positions
#define KEYS_LEFT 0 1 2 3 4 5 6 \
                  14 15 16 17 18 19 20 \
                  28 29 30 31 32 33 34 \
                  46 47 48 49 50 51 \
                  66 67 68 69 70
#define KEYS_RIGHT 7 8 9 10 11 12 13 \
                   21 22 23 24 25 26 27 \
                   39 40 41 42 43 44 45 \
                   60 61 62 63 64 65 \
                   77 78 79 80 81
#define THUMBS_LEFT 35 36 54 71 72 73
#define THUMBS_RIGHT 37 38 57 74 75 76
#define THUMBS THUMBS_LEFT THUMBS_RIGHT

/ {
    behaviors {
      #include "macros.dtsi"
      #include "version.dtsi"
      #ifndef VERSION_MACRO
      macro_ver: macro_ver {
        compatible = "zmk,behavior-macro";
        label = "macro_version";
        #binding-cells = <0>;
        bindings = <&kp RET>;
      };
      #endif

      hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "balanced";
        bindings = <&kp>, <&kp>;
      };
      hm_l: homerow_mods_left {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS_LEFT";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "balanced";
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <KEYS_RIGHT THUMBS>;
      };
      hm_r: homerow_mods_right {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS_RIGHT";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "balanced";
        bindings = <&kp>, <&kp>;
        hold-trigger-key-positions = <KEYS_LEFT THUMBS>;
      };
      pkp_n1: plus_kp_n1 {
        compatible = "zmk,behavior-mod-morph";
        label = "plus_kp_n1";
        #binding-cells = <0>;
        bindings = <&kp PLUS>, <&kp KP_N1>;
        mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
      };
      lkp_n2: left_bracket_kp_n2 {
        compatible = "zmk,behavior-mod-morph";
        label = "left_bracket_kp_n2";
        #binding-cells = <0>;
        bindings = <&kp LEFT_BRACKET>, <&kp KP_N2>;
        mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
      };
      lkp_n3: left_brace_kp_n3 {
        compatible = "zmk,behavior-mod-morph";
        label = "left_brace_kp_n3";
        #binding-cells = <0>;
        bindings = <&kp LEFT_BRACE>, <&kp KP_N3>;
        mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
      };
      lkp_n4: left_parenthesis_kp_n4 {
        compatible = "zmk,behavior-mod-morph";
        label = "left_parenthesis_kp_n4";
        #binding-cells = <0>;
        bindings = <&kp LEFT_PARENTHESIS>, <&kp KP_N4>;
        mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
      };
      akp_n5: amps_kp_n5 {
        compatible = "zmk,behavior-mod-morph";
        label = "amps_kp_n5";
        #binding-cells = <0>;
        bindings = <&kp AMPS>, <&kp KP_N5>;
        mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
      };
      ekp_n6: equal_kp_n6 {
        compatible = "zmk,behavior-mod-morph";
        label = "equal_kp_n6";
        #binding-cells = <0>;
        bindings = <&kp EQUAL>, <&kp KP_N6>;
        mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
      };
      rkp_n7: right_parenthesis_kp_n7 {
        compatible = "zmk,behavior-mod-morph";
        label = "right_parenthesis_kp_n7";
        #binding-cells = <0>;
        bindings = <&kp RIGHT_PARENTHESIS>, <&kp KP_N7>;
        mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
      };
      rkp_n8: right_brace_kp_n8 {
        compatible = "zmk,behavior-mod-morph";
        label = "right_brace_kp_n8";
        #binding-cells = <0>;
        bindings = <&kp RIGHT_BRACE>, <&kp KP_N8>;
        mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
      };
      rkp_n9: right_bracket_kp_n9 {
        compatible = "zmk,behavior-mod-morph";
        label = "right_bracket_kp_n9";
        #binding-cells = <0>;
        bindings = <&kp RIGHT_BRACKET>, <&kp KP_N9>;
        mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
      };
      skp_n0: star_kp_n0 {
        compatible = "zmk,behavior-mod-morph";
        label = "star_kp_n0";
        #binding-cells = <0>;
        bindings = <&kp STAR>, <&kp KP_N0>;
        mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
      };
      eprcnt: excl_prcnt {
        compatible = "zmk,behavior-mod-morph";
        label = "excl_prcnt";
        #binding-cells = <0>;
        bindings = <&kp EXCL>, <&kp PRCNT>;
        mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
      };
      dtilde: dllr_tilde {
        compatible = "zmk,behavior-mod-morph";
        label = "dllr_tilde";
        #binding-cells = <0>;
        bindings = <&kp DLLR>, <&kp TILDE>;
        mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
      };
      pgrave: pipe_grave {
        compatible = "zmk,behavior-mod-morph";
        label = "pipe_grave";
        #binding-cells = <0>;
        bindings = <&kp PIPE>, <&kp GRAVE>;
        mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
      };
      bhash: bslh_hash {
        compatible = "zmk,behavior-mod-morph";
        label = "bslh_hash";
        #binding-cells = <0>;
        bindings = <&kp BSLH>, <&kp HASH>;
        mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
      };
      acaret: at_caret {
        compatible = "zmk,behavior-mod-morph";
        label = "at_caret";
        #binding-cells = <0>;
        bindings = <&kp AT>, <&kp CARET>;
        mods = <(LGUI|LSHIFT|RGUI|RSHIFT)>;
      };
    };

  // Define Homerow Mods (Shared)
  #define A_CTRL &hm_l LCTRL A        // Control key on pinky fingers

  // Define Homerow Mods (Qwerty)
  #define F_SHFT &hm_l LSHFT F        // Shift on index fingers
  #define J_SHFT &hm_r RSHFT J
  #define D_CMD &hm_l LGUI D          // Command / Windows on middle fingers
  #define K_CMD &hm_r RGUI K
  #define S_OPT &hm_l LALT S          // Option / Alt on ring fingers
  #define L_OPT &hm_r RALT L        
  #define SEMI_CTRL &hm_r RCTRL SEMI  // Control key on pinky fingers

  // Define Homerow Mods (Dvorak)
  #define U_SHFT &hm_l LSHFT U        // Shift on index fingers
  #define H_SHFT &hm_r RSHFT H
  #define E_CMD &hm_l LGUI E          // Command / Windows on middle fingers
  #define T_CMD &hm_r RGUI T
  #define O_OPT &hm_l LALT O          // Option / Alt on ring fingers
  #define N_OPT &hm_r RALT N        
  #define S_CTRL &hm_r RCTRL S        // Control key on pinky fingers
  

  keymap {
    compatible = "zmk,keymap";

    qwerty {
      bindings = <
        &pgrave    &pkp_n1        &lkp_n2       &lkp_n3       &lkp_n4       &akp_n5       &tog KEYPAD                                               &mo MOD               &ekp_n6   &rkp_n7     &rkp_n8       &rkp_n9        &skp_n0          &eprcnt
        &kp TAB    &kp Q          &kp W         &kp E         &kp R         &kp T         &to QWERTY                                                &kp PSCRN             &kp Y     &kp U       &kp I         &kp O          &kp P            &bhash
        &kp ESC    A_CTRL         S_OPT         D_CMD         F_SHFT        &kp G         &to DVORAK   &kp LGUI   &kp LALT  &kp RCTRL   &kp RGUI    &kp INS               &kp H     J_SHFT      K_CMD         L_OPT          SEMI_CTRL        &kp MINUS
        &kp LSHFT  &kp Z          &kp X         &kp C         &kp V         &kp B                                 &kp HOME  &kp PG_UP                                     &kp N     &kp M       &kp COMMA     &kp DOT        &kp FSLH         &kp RSHFT
        &mo FN     &dtilde        &kp CAPS      &kp LEFT      &kp RIGHT                   &kp BSPC     &kp DEL    &kp END   &kp PG_DN   &kp ENTER   &kp SPACE                       &kp UP      &kp DOWN      &kp SQT        &acaret          &mo FN
      >;
    };
    dvorak {
      bindings = <
        &pgrave    &pkp_n1        &lkp_n2       &lkp_n3       &lkp_n4       &akp_n5       ______                                                    ______                &ekp_n6   &rkp_n7     &rkp_n8       &rkp_n9        &skp_n0          &eprcnt
        ______     &kp SEMI       &kp COMMA     &kp DOT       &kp P         &kp Y         ______                                                    ______                &kp F     &kp G       &kp C         &kp R          &kp L            &bhash
        ______     A_CTRL         O_OPT         E_CMD         U_SHFT        &kp I         ______       ______     ______    ______      ______      ______                &kp D     H_SHFT      T_CMD         N_OPT          S_CTRL           &kp MINUS
        ______     &kp SQT        &kp Q         &kp J         &kp K         &kp X                                 ______    ______                                        &kp B     &kp M       &kp W         &kp V          &kp Z            ______
        ______     &dtilde        ______        ______        ______                      ______       ______     ______    ______      ______      ______                          ______      ______        &kp FSLH       &acaret          ______
      >;
    };
    keypad {
      bindings = <
        ______      ______        ______        ______        ______        ______        ______                                                    ______                ______    &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  ______
        ______      ______        ______        ______        ______        ______        ______                                                    ______                ______    &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     ______
        ______      ______        ______        ______        ______        ______        ______       ______     ______    ______      ______      ______                ______    &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      ______
        ______      ______        ______        ______        ______        ______                                ______    ______                                        ______    &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     ______
        ______      ______        ______        ______        ______                      ______       ______     ______    ______      ______      &kp KP_N0                       ______      ______        &kp KP_DOT     ______           ______
      >;
    };
    fn {
      bindings = <
        &kp F1      &kp F2        &kp F3        &kp F4        &kp F5        &kp F6        ______                                                    ______                 &kp F7   &kp F8       &kp F9       &kp F10        &kp F11          &kp F12
        ______      ______        ______        ______        ______        ______        ______                                                    ______                 ______   ______       ______       ______         ______           ______
        ______      ______        ______        ______        ______        ______        ______       ______     ______    ______      ______      ______                 ______   ______       ______       ______         ______           ______
        ______      ______        ______        ______        ______        ______                                ______    ______                                         ______   ______       ______       ______         ______           ______
        ______      ______        ______        ______        ______                      ______       ______     ______    ______      ______      ______                          ______       ______       ______         ______           ______
      >;
    };
    mod {
      bindings = <
        xxxxxx      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  xxxxxx                                                    ______                  xxxxxx  xxxxxx       xxxxxx       xxxxxx         xxxxxx           xxxxxx
        xxxxxx      xxxxxx        xxxxxx        xxxxxx        xxxxxx        xxxxxx        &bootloader                                               &bootloader             xxxxxx  xxxxxx       xxxxxx       xxxxxx         xxxxxx           xxxxxx
        xxxxxx      xxxxxx        xxxxxx        xxxxxx        xxxxxx        xxxxxx        xxxxxx       xxxxxx     xxxxxx    &bt BT_CLR  xxxxxx      &rgb_ug RGB_MEFS_CMD 5  xxxxxx  xxxxxx       xxxxxx       xxxxxx         xxxxxx           xxxxxx
        xxxxxx      xxxxxx        xxxxxx        xxxxxx        &macro_ver    xxxxxx                                xxxxxx    xxxxxx                                          xxxxxx  xxxxxx       xxxxxx       xxxxxx         xxxxxx           xxxxxx
        xxxxxx      xxxxxx        xxxxxx        xxxxxx        xxxxxx                      xxxxxx       xxxxxx     xxxxxx    xxxxxx      &bl BL_TOG  &rgb_ug RGB_TOG                 &bl BL_INC   &bl BL_DEC   xxxxxx         xxxxxx           xxxxxx
      >;
    };
  };
};
